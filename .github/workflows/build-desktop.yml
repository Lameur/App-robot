name: Build Windows and Linux Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      shell: bash

    - name: Install Python dependencies
      run: |
        uv venv
        . .venv/Scripts/activate
        uv sync
      shell: bash

    - name: Install Mesa3D for OpenGL support
      run: |
        curl -L -o mesa-dist-win64.zip https://github.com/pal1000/mesa-dist-win/releases/download/23.1.7.0/mesa-dist-win64-23.1.7.0.zip
        unzip mesa-dist-win64.zip -d mesa-dist-win64
        setx MESA_GL_VERSION_OVERRIDE 2.0
        setx MESA_GLSL_VERSION_OVERRIDE 110
        setx PATH "%PATH%;%CD%\\mesa-dist-win64\\bin"

    - name: Build Windows executable
      run: |
        . .venv/Scripts/activate
        pyinstaller --onefile --name RobotControl src/app/main.py
      shell: bash

    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/RobotControl.exe

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev \
          python3-pip \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libsmpeg-dev \
          libportmidi-dev \
          libavformat-dev \
          libswscale-dev \
          zlib1g-dev

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Build Linux executable
      run: |
        uv venv
        . .venv/bin/activate
        uv sync
        pyinstaller --onefile --name RobotControl src/app/main.py

    - name: Upload Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: linux-executable
        path: dist/RobotControl